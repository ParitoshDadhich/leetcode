// time o(n)
// space o(1)


class Solution {
    public int findDuplicate(int[] num) {
        int tor = num[0];
        int rab = num[0];
        
        do{
            tor = num[tor];
            rab = num[num[rab]];
        } while(tor !=  rab);
        
        tor = num[0];
        while(tor != rab){
            tor = num[tor];
            rab = num[rab];
        }
        
        return tor;
    }
}

// method 2 by using set
// time o(n)
// space o(n)

/*
class Solution {
    public int findDuplicate(int[] num) {
         Set<Integer> hs = new HashSet<>();
         for(int nums : num){
             if(hs.contains(nums))
                 return nums;
             
             hs.add(nums);
         }
        
        return -1;
    }
}
*/
